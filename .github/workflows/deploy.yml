name: Deploy Backend to EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy .NET Backend to EC2
    runs-on: ubuntu-latest
    environment: main

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Create Zip Package (include root Docker/Docker-compose)
        run: |
          mkdir upload
          cp -r EcommerenceBackend upload/EcommerenceBackend
          cp Dockerfile docker-compose.yml .dockerignore upload/
          cd upload
          zip -r ../EcommerenceBackend.zip .
          cd ..
          ls -lh EcommerenceBackend.zip

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts || true

      - name: Upload Zip to EC2
        run: |
          scp -o StrictHostKeyChecking=no EcommerenceBackend.zip ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~/EcommerenceBackend.zip

      - name: Deploy on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            echo "✅ Connected to EC2"

            # Remove old container/image if exists
            sudo docker stop ecommercebackend-webapi || true
            sudo docker rm ecommercebackend-webapi || true
            sudo docker rmi ecommerencebackend-ecommercebackend-webapi || true

            # Clean old folder and unzip
            rm -rf ~/EcommerenceBackend
            unzip -o ~/EcommerenceBackend.zip -d ~/EcommerenceBackend

            # Move to folder and build
            cd ~/EcommerenceBackend
            sudo docker build -t ecommerencebackend-ecommercebackend-webapi .

            # Run container on port 5000 -> 8080
            sudo docker run -d -p 5000:8080 --name ecommercebackend-webapi ecommerencebackend-ecommercebackend-webapi

            echo "✅ Backend Deployed Successfully on port 5000"
          EOF
